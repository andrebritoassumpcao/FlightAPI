// <auto-generated />
using System;
using FlightAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230610211844_StatusMigration")]
    partial class StatusMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("FlightAPI.Models.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("CargoCapacity")
                        .HasColumnType("REAL");

                    b.Property<float>("CargoQuantity")
                        .HasColumnType("REAL");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PassangerQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PassengerCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("FlightAPI.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignedAircraftId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAircraftId");

                    b.HasIndex("StatusId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightAPI.Models.FlightStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DelayReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("FlightCanceled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FlightConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FlightDelay")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NewTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Rebook")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FlightStatus");
                });

            modelBuilder.Entity("FlightAPI.Models.Flight", b =>
                {
                    b.HasOne("FlightAPI.Models.Aircraft", "AssignedAircraft")
                        .WithMany()
                        .HasForeignKey("AssignedAircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightAPI.Models.FlightStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedAircraft");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
